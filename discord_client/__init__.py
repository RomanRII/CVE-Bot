import discord
import threading
import asyncio
from discord.ext import commands
from discord_client.config import config  # Adjust the import according to your project structure
from discord_client.messages import errors, success, running
import discord_client.functions as bot_functions

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='/', intents=intents)

@bot.event
async def on_ready():
    print(f'Logged on as {bot.user}!')

@bot.command()
async def query_cve(ctx, left):
    """Query a specific CVE. (/query_cve <CVE_ID>)"""
    try:
        cve_id = str.upper(left)
    except TypeError:
        await ctx.send(errors.invalid_cve_id)
        return
    await ctx.send(bot_functions.query_cve(cve_id))


@bot.command()
async def query_all(ctx):
    """Query all CVEs in the database. (/query_all)"""
    await ctx.send(bot_functions.query_all())

@bot.command()
async def update_db(ctx):
    """Run a query for new CVEs. (/update_db)"""
    await ctx.send(running.updating_db)
    
    def add_cves_and_notify():
        bot_functions.add_cves()
        asyncio.run_coroutine_threadsafe(
            ctx.send(success.updated_db),
            bot.loop
        )

    cve_thread = threading.Thread(target=add_cves_and_notify, name="CVE Thread")
    cve_thread.start()

@bot.command()
async def list_config(ctx):
    """List the current configuration in place for CWEs and Keywords"""
    await ctx.send(bot_functions.list_config())


def start_client():
    bot.run(config.CLIENT_TOKEN)

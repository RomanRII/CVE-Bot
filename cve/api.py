import sys
import json
import requests
from cve import create_connection
from cve.config import config, target_rules

def query_cves(url):
    credentials = (config.CVE_USERNAME, config.CVE_PASSWORD)
    response = requests.get(url=url, auth=credentials)
    if response.status_code == 200:
        return response.json()
    else:
        print("Failed to fetch data from API")
        return False

def get_cve_data(cve_id):
    connection = create_connection()
    cursor = connection.cursor()
    
    new_url = f"{config.CVES_URL}/cve/{cve_id}" 
    data = query_cves(url=new_url)

    if data:
        summary = data.get('summary')
        cvss_v2 = data.get('cvss', {}).get('v2')
        cvss_v3 = data.get('cvss', {}).get('v3')
        vendors = json.dumps(data.get('vendors', {}))  # Convert dictionary to string

        cvss_v2_score = float(cvss_v2) if cvss_v2 is not None else 0
        cvss_v3_score = float(cvss_v3) if cvss_v3 is not None else 0

        if cvss_v2_score > 7.0 or cvss_v3_score > 7.0:
            cursor.execute('''INSERT INTO CVEs (cve_id, summary, cvss_v2, cvss_v3, vendors) VALUES (?, ?, ?, ?, ?)''', (cve_id, summary, cvss_v2, cvss_v3, vendors))
            connection.commit()

    connection.close()

def add_cves():
    connection = create_connection()
    cursor = connection.cursor()

    for cwe_id in target_rules.cwes:
        cve_data = query_cves(f"{config.CVES_URL}/cwe/{cwe_id}/cve")
        if not cve_data:
            print(f"[!] Error getting CVEs for CWE ID {cwe_id}. Check your credentials or API availability")
            continue

        for cve in cve_data:
            cve_id = cve.get("id")

            # Check if the CVE ID already exists in the database
            cursor.execute("SELECT COUNT(*) FROM CVEs WHERE cve_id = ?", (cve_id,))
            if cursor.fetchone()[0] == 0:
                get_cve_data(cve_id=cve_id)

    connection.commit()
    connection.close()